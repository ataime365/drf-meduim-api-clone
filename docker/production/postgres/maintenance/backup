#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset

working_dir="$(dirname ${0})" # $() for running commands inside. ${} for variables

#source command is used to read and execute commands from a bash file
source "${working_dir}/_sourced/constants.sh"
source "${working_dir}/_sourced/messages.sh"

#Bringing in the message_welcome() function from the /_sourced/messages.sh
message_welcome "Backing up the '${POSTGRES_DB}' database..."

if [[ "${POSTGRES_USER}" == "postgres" ]]; then
    # because we cant backup with the default postgres user, we must create or use another user
    message_error "Backing up as 'postgres' user is not allowed. Assign 'POSTGRES_USER' env with another one and try again"
    exit 1 #Failure
fi

# Environment Variables for pg_dump
export PGHOST="${POSTGRES_HOST}"
export PGPORT="${POSTGRES_PORT}"
export PGUSER="${POSTGRES_USER}"
export PGPASSWORD="${POSTGRES_PASSWORD}"
export PGDATABASE="${POSTGRES_DB}"

#create backup file
# BACKUP_FILE_PREFIX='backup' #from constants.sh
# date is a bash command that displays the current date
backup_filename="${BACKUP_FILE_PREFIX}_$(date +'%Y_%m_%dT%H_%M_%S').sql.gz"

#This dump command creates a database backup
pg_dump | gzip > "${BACKUP_DIR_PATH}/${backup_filename}"

message_success "'${POSTGRES_DB}' database backup '${backup_filename}' has been created successfully and place in '${BACKUP_DIR_PATH}'"





