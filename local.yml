version: "3.9" #docker compose file

services:
  api:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    volumes:
      - .:/app:z #mapping the local directory to the /app docker directory
      - static_volume:/app/staticfiles # : is mapping
      - media_volume:/app/mediafiles
    # ports:
    #   - "8000:8000"
    expose:
      - "8000"
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    depends_on:
      - postgres
      - mailhog
      - redis
    command: /start #The start scripts #python manage.py runserver 0.0.0.0:8000
    networks:
      - authors-api #we want all our services to run on the same network

  postgres:
    build:
      context: .
      dockerfile: ./docker/local/postgres/Dockerfile
    volumes:
      - local_postgres_data:/var/lib/postgresql/data #mapping #This is where postgres stores its data by default
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    networks:
      - authors-api

  mailhog:
    image: mailhog/mailhog:v1.0.0 #using pre-built image
    container_name: mailhog
    ports:
      - "8025:8025"
    networks:
      - authors-api

  redis:
    image: redis:7-alpine
    networks:
      - authors-api
  
  celery_worker:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile #This django image is actually a python environment, so it can run celery also
    # same docker file, but the commands are different
    command: /start-celeryworker # This is an sh file in the docker root directory. The Dockerfile copied it to the root directory  
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    depends_on:
      - redis
      - postgres
      - mailhog
    networks:
      - authors-api

  flower:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile #python environment
    # same dockerfile, but the commands are different
    command: /start-flower # This is an sh file in the docker root directory. The Dockerfile copied it to the root directory 
    volumes:
      - flower_data:/data
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - postgres
    networks:
      - authors-api

  nginx:
    restart: always # because this is our server
    depends_on:
      - api
    volumes:
      - static_volume:/app/staticfiles # : is mapping
      - media_volume:/app/mediafiles
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80" #Our server will now be running on port 8080
    networks:
      - authors-api


# Let us tell compose about our network and volumes
networks:
  authors-api:
    driver: bridge

volumes:
  static_volume:
  media_volume:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  flower_data: {}
